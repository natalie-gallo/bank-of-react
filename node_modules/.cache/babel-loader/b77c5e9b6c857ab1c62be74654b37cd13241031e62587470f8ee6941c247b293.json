{"ast":null,"code":"var _jsxFileName = \"/Users/nataliegallo/CS/webdev/bank-of-react/src/App.js\";\n\n/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios'; // needed for api calling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.addCredit = credit => {\n      this.setState({\n        creditList: [...this.state.creditList, credit]\n      });\n      this.setState({\n        accountBalance: +this.state.accountBalance + +credit.amount\n      }); //the + in front of both variables insures that we are doing addition and not concatenating strings\n    };\n\n    this.addDebit = debit => {\n      this.setState({\n        debitList: [...this.state.debitList, debit]\n      });\n      this.setState({\n        accountBalance: +this.state.accountBalance - +debit.amount\n      });\n    };\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  }\n  /*\n  Make API requests using the following endpoints:\n  Credits API endpoint -> https://johnnylaicode.github.io/api/credits.json\n  Debits API endpoint -> https://johnnylaicode.github.io/api/debits.json\n  */\n\n\n  async componentDidMount() {\n    let linkToCreditAPI = 'https://johnnylaicode.github.io/api/credits.json';\n    let linkToDebitAPI = 'https://johnnylaicode.github.io/api/debits.json';\n    let totalCredits = 0;\n    let totalDebits = 0;\n    let balance = 0; //Await for promise (completion) returned from API call\n\n    try {\n      let response = await axios.get(linkToCreditAPI);\n      console.log(response); // print response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        creditList: response.data\n      }); // Store received data in state's \"creditList\" object\n\n      for (let credit of this.state.creditList) {\n        totalCredits += credit.amount;\n      }\n    } catch (error) {\n      // print errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // print error message\n\n        console.log(error.response.status); //print status code\n      }\n    } //Await for promise (completion) returned from API call\n\n\n    try {\n      let response = await axios.get(linkToDebitAPI);\n      console.log(response); // print response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        debitList: response.data\n      }); // Store received data in state's \"debitList\" object\n\n      for (let debit of this.state.debitList) {\n        totalDebits += debit.amount;\n      }\n    } catch (error) {\n      // print errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // print error message\n\n        console.log(error.response.status); //print status code\n      }\n    }\n\n    balance = totalCredits - totalDebits;\n    this.setState({\n      accountBalance: balance.toFixed(2)\n    });\n  } // update state based on user input of new credit\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList,\n      addCredit: this.addCredit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList,\n      addDebit: this.addDebit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-starter-code\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nataliegallo/CS/webdev/bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","axios","App","constructor","addCredit","credit","setState","creditList","state","accountBalance","amount","addDebit","debit","debitList","mockLogIn","logInInfo","newUser","currentUser","userName","memberSince","componentDidMount","linkToCreditAPI","linkToDebitAPI","totalCredits","totalDebits","balance","response","get","console","log","data","error","status","toFixed","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios'; // needed for api calling\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n  \n  /*\n  Make API requests using the following endpoints:\n  Credits API endpoint -> https://johnnylaicode.github.io/api/credits.json\n  Debits API endpoint -> https://johnnylaicode.github.io/api/debits.json\n  */\n  async componentDidMount() {\n    let linkToCreditAPI = 'https://johnnylaicode.github.io/api/credits.json';\n    let linkToDebitAPI = 'https://johnnylaicode.github.io/api/debits.json';\n\n    let totalCredits = 0;\n    let totalDebits = 0;\n    let balance = 0;\n\n    //Await for promise (completion) returned from API call\n    try {\n      let response = await axios.get(linkToCreditAPI);\n      console.log(response); // print response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({creditList: response.data});  // Store received data in state's \"creditList\" object\n      for (let credit of this.state.creditList){\n        totalCredits += credit.amount;\n      }\n    } catch (error) { // print errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // print error message\n        console.log(error.response.status); //print status code\n      }\n    }\n\n    //Await for promise (completion) returned from API call\n    try {\n      let response = await axios.get(linkToDebitAPI);\n      console.log(response); // print response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({debitList: response.data});  // Store received data in state's \"debitList\" object\n      for (let debit of this.state.debitList){\n        totalDebits += debit.amount;\n      }\n    } catch (error) { // print errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // print error message\n        console.log(error.response.status); //print status code\n      }\n    }\n\n    balance = totalCredits - totalDebits;\n    this.setState({accountBalance: balance.toFixed(2)});\n  }\n\n  // update state based on user input of new credit\n  addCredit = (credit) => {\n    this.setState({creditList: [...this.state.creditList, credit]});\n    this.setState({accountBalance: +this.state.accountBalance + +credit.amount}); \n    //the + in front of both variables insures that we are doing addition and not concatenating strings\n  }\n\n  // update state based on user input of new debit\n  addDebit = (debit) => {\n    this.setState({debitList: [...this.state.debitList, debit]});\n    this.setState({accountBalance: +this.state.accountBalance - +debit.amount}); \n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-starter-code\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}