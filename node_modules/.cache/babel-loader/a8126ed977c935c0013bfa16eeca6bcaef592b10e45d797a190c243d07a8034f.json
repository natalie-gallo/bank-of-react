{"ast":null,"code":"/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/import{Link}from'react-router-dom';import AccountBalance from'./AccountBalance';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const Credits=props=>{// Create the list of Credit items\nlet itemCount=0;let creditsView=()=>{const{credits}=props;return credits.map(credit=>{// Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\nconst date=credit.date?credit.date.slice(0,10):'';itemCount++;return/*#__PURE__*/_jsxs(\"li\",{children:[credit.amount,\" \",credit.description,\" \",date]},credit.id);});};function submitNewEntry(event){//we are added a new item to the list\nitemCount++;//getting today's date\nconst today=new Date();const newDate=today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();//access the input values from the event object\nconst description=event.target.elements.description.value;const amount=event.target.elements.amount.value;let tempCredit={id:itemCount,description:description,amount:amount,date:newDate};console.log(tempCredit);props.addCredit(tempCredit);};// Render the list of Credit items and a form to input new Debit item\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Credits\"}),creditsView(),/*#__PURE__*/_jsxs(\"form\",{onSubmit:event=>{event.preventDefault();// Prevent default form submission\nsubmitNewEntry(event);// Call your function to handle the form submission\n},children:[\"Description:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"description\"}),\"Amount:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",name:\"amount\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Credit\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(AccountBalance,{accountBalance:props.accountBalance}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Return to Home\"})]});};export default Credits;","map":{"version":3,"sources":["/Users/nataliegallo/CS/webdev/bank-of-react/src/components/Credits.js"],"names":["Link","AccountBalance","Credits","props","itemCount","creditsView","credits","map","credit","date","slice","amount","description","id","submitNewEntry","event","today","Date","newDate","getFullYear","getMonth","getDate","target","elements","value","tempCredit","console","log","addCredit","preventDefault","accountBalance"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,oDACA,OAAQA,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,wFAEA,KAAMC,CAAAA,OAAO,CAAIC,KAAD,EAAW,CAExB;AACA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIC,CAAAA,WAAW,CAAG,IAAM,CACvB,KAAM,CAAEC,OAAF,EAAcH,KAApB,CACA,MAAOG,CAAAA,OAAO,CAACC,GAAR,CAAaC,MAAD,EAAY,CAAG;AAChC,KAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACC,IAAP,CAAcD,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,CAAqB,EAArB,CAAd,CAAyC,EAAtD,CACAN,SAAS,GACT,mBAAO,sBAAqBI,MAAM,CAACG,MAA5B,CAAmC,GAAnC,CAAqCH,MAAM,CAACI,WAA5C,CAAwD,GAAxD,CAA0DH,IAA1D,GAASD,MAAM,CAACK,EAAhB,CAAP,CACD,CAJM,CAAP,CAKD,CAPA,CASD,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC7B;AACAX,SAAS,GACT;AACA,KAAMY,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,EAAd,CACA,KAAMC,CAAAA,OAAO,CAAGF,KAAK,CAACG,WAAN,GAAsB,GAAtB,EAA6BH,KAAK,CAACI,QAAN,GAAmB,CAAhD,EAAqD,GAArD,CAA2DJ,KAAK,CAACK,OAAN,EAA3E,CAEA;AACA,KAAMT,CAAAA,WAAW,CAAGG,KAAK,CAACO,MAAN,CAAaC,QAAb,CAAsBX,WAAtB,CAAkCY,KAAtD,CACA,KAAMb,CAAAA,MAAM,CAAGI,KAAK,CAACO,MAAN,CAAaC,QAAb,CAAsBZ,MAAtB,CAA6Ba,KAA5C,CAEA,GAAIC,CAAAA,UAAU,CAAG,CACfZ,EAAE,CAAET,SADW,CAEfQ,WAAW,CAAEA,WAFE,CAGfD,MAAM,CAAEA,MAHO,CAIfF,IAAI,CAAES,OAJS,CAAjB,CAKAQ,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAEAtB,KAAK,CAACyB,SAAN,CAAgBH,UAAhB,EACD,EAED;AACA,mBACE,oCACE,oBAAI,SAAJ,EADF,CAGGpB,WAAW,EAHd,cAKE,cAAM,QAAQ,CAAGU,KAAD,EAAW,CACzBA,KAAK,CAACc,cAAN,GAAwB;AACxBf,cAAc,CAACC,KAAD,CAAd,CAAuB;AACxB,CAHD,WAGG,cAHH,cAKE,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,aAAxB,EALF,CAK0C,SAL1C,cAOE,cAAO,IAAI,CAAC,QAAZ,CAAqB,IAAI,CAAC,MAA1B,CAAiC,IAAI,CAAC,QAAtC,EAPF,cAQE,eAAQ,IAAI,CAAC,QAAb,UAAsB,YAAtB,EARF,GALF,cAeE,aAfF,cAgBE,KAAC,cAAD,EAAgB,cAAc,CAAEZ,KAAK,CAAC2B,cAAtC,EAhBF,cAiBE,aAjBF,cAkBE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,UAAa,gBAAb,EAlBF,GADF,CAsBD,CAzDD,CA2DA,cAAe5B,CAAAA,OAAf","sourcesContent":["/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  \n   // Create the list of Credit items\n   let itemCount = 0;\n   let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n      const date = credit.date ? credit.date.slice(0, 10) : '';\n      itemCount++;\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    });\n  }\n\n  function submitNewEntry(event) {\n    //we are added a new item to the list\n    itemCount++;\n    //getting today's date\n    const today = new Date();\n    const newDate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    //access the input values from the event object\n    const description = event.target.elements.description.value;\n    const amount = event.target.elements.amount.value;\n\n    let tempCredit = {\n      id: itemCount,\n      description: description, \n      amount: amount, \n      date: newDate};\n    console.log(tempCredit);\n\n    props.addCredit(tempCredit);\n  };\n\n  // Render the list of Credit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <form onSubmit={(event) => {\n        event.preventDefault(); // Prevent default form submission\n        submitNewEntry(event); // Call your function to handle the form submission\n      }}>\n        Description:\n        <input type=\"text\" name=\"description\" />\n        Amount:\n        <input type=\"number\" step=\"0.01\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}