{"ast":null,"code":"/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/import React,{Component}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';// Import other components\nimport Home from'./components/Home';import UserProfile from'./components/UserProfile';import LogIn from'./components/Login';import Credits from'./components/Credits';import Debits from'./components/Debits';import axios from'axios';// needed for api calling\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){// Create and initialize state\nsuper();this.addCredit=credit=>{this.setState({creditList:[...this.state.creditList,credit]});this.setState({accountBalance:+this.state.accountBalance+ +credit.amount});//the + in front of both variables insures that we are doing addition and not concatenating strings\n};this.addDebit=debit=>{this.setState({debitList:[...this.state.debitList,debit]});this.setState({accountBalance:+this.state.accountBalance-+debit.amount});};this.mockLogIn=logInInfo=>{const newUser={...this.state.currentUser};newUser.userName=logInInfo.userName;this.setState({currentUser:newUser});};this.state={accountBalance:1234567.89,creditList:[],debitList:[],currentUser:{userName:'Joe Smith',memberSince:'11/22/99'}};}/*\n  Make API requests using the following endpoints:\n  Credits API endpoint -> https://johnnylaicode.github.io/api/credits.json\n  Debits API endpoint -> https://johnnylaicode.github.io/api/debits.json\n  */async componentDidMount(){let linkToCreditAPI='https://johnnylaicode.github.io/api/credits.json';let linkToDebitAPI='https://johnnylaicode.github.io/api/debits.json';let totalCredits=0;let totalDebits=0;let balance=0;//Await for promise (completion) returned from API call\ntry{let response=await axios.get(linkToCreditAPI);console.log(response);// print response\n// To get data object in the response, need to use \"response.data\"\nthis.setState({creditList:response.data});// Store received data in state's \"creditList\" object\nfor(let credit of this.state.creditList){totalCredits+=credit.amount;}}catch(error){// print errors at console when there is an error response\nif(error.response){// The request was made, and the server responded with error message and status code.\nconsole.log(error.response.data);// print error message\nconsole.log(error.response.status);//print status code\n}}//Await for promise (completion) returned from API call\ntry{let response=await axios.get(linkToDebitAPI);console.log(response);// print response\n// To get data object in the response, need to use \"response.data\"\nthis.setState({debitList:response.data});// Store received data in state's \"debitList\" object\nfor(let debit of this.state.debitList){totalDebits+=debit.amount;}}catch(error){// print errors at console when there is an error response\nif(error.response){// The request was made, and the server responded with error message and status code.\nconsole.log(error.response.data);// print error message\nconsole.log(error.response.status);//print status code\n}}balance=totalCredits-totalDebits;this.setState({accountBalance:balance.toFixed(2)});}// update state based on user input of new credit\n// Create Routes and React elements to be rendered using React components\nrender(){// Create React elements and pass input props to components\nconst HomeComponent=()=>/*#__PURE__*/_jsx(Home,{accountBalance:this.state.accountBalance});const UserProfileComponent=()=>/*#__PURE__*/_jsx(UserProfile,{userName:this.state.currentUser.userName,memberSince:this.state.currentUser.memberSince});const LogInComponent=()=>/*#__PURE__*/_jsx(LogIn,{user:this.state.currentUser,mockLogIn:this.mockLogIn});const CreditsComponent=()=>/*#__PURE__*/_jsx(Credits,{credits:this.state.creditList,addCredit:this.addCredit,accountBalance:this.state.accountBalance});const DebitsComponent=()=>/*#__PURE__*/_jsx(Debits,{debits:this.state.debitList,addDebit:this.addDebit,accountBalance:this.state.accountBalance});// Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\nreturn/*#__PURE__*/_jsx(Router,{basename:\"/bank-of-react\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:HomeComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userProfile\",render:UserProfileComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:LogInComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/credits\",render:CreditsComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/debits\",render:DebitsComponent})]})});}}export default App;","map":{"version":3,"sources":["/Users/nataliegallo/CS/webdev/bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","axios","App","constructor","addCredit","credit","setState","creditList","state","accountBalance","amount","addDebit","debit","debitList","mockLogIn","logInInfo","newUser","currentUser","userName","memberSince","componentDidMount","linkToCreditAPI","linkToDebitAPI","totalCredits","totalDebits","balance","response","get","console","log","data","error","status","toFixed","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios'; // needed for api calling\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n  \n  /*\n  Make API requests using the following endpoints:\n  Credits API endpoint -> https://johnnylaicode.github.io/api/credits.json\n  Debits API endpoint -> https://johnnylaicode.github.io/api/debits.json\n  */\n  async componentDidMount() {\n    let linkToCreditAPI = 'https://johnnylaicode.github.io/api/credits.json';\n    let linkToDebitAPI = 'https://johnnylaicode.github.io/api/debits.json';\n\n    let totalCredits = 0;\n    let totalDebits = 0;\n    let balance = 0;\n\n    //Await for promise (completion) returned from API call\n    try {\n      let response = await axios.get(linkToCreditAPI);\n      console.log(response); // print response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({creditList: response.data});  // Store received data in state's \"creditList\" object\n      for (let credit of this.state.creditList){\n        totalCredits += credit.amount;\n      }\n    } catch (error) { // print errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // print error message\n        console.log(error.response.status); //print status code\n      }\n    }\n\n    //Await for promise (completion) returned from API call\n    try {\n      let response = await axios.get(linkToDebitAPI);\n      console.log(response); // print response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({debitList: response.data});  // Store received data in state's \"debitList\" object\n      for (let debit of this.state.debitList){\n        totalDebits += debit.amount;\n      }\n    } catch (error) { // print errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // print error message\n        console.log(error.response.status); //print status code\n      }\n    }\n\n    balance = totalCredits - totalDebits;\n    this.setState({accountBalance: balance.toFixed(2)});\n  }\n\n  // update state based on user input of new credit\n  addCredit = (credit) => {\n    this.setState({creditList: [...this.state.creditList, credit]});\n    this.setState({accountBalance: +this.state.accountBalance + +credit.amount}); \n    //the + in front of both variables insures that we are doing addition and not concatenating strings\n  }\n\n  // update state based on user input of new debit\n  addDebit = (debit) => {\n    this.setState({debitList: [...this.state.debitList, debit]});\n    this.setState({accountBalance: +this.state.accountBalance - +debit.amount}); \n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}